---
#- name: check if psql geo.gov role exists
#  command: sudo -u postgres psql -c "SELECT 1 FROM pg_roles WHERE rolname='{{ catalog_db_user }}';"
#  register: check_ckan_db_user
#  tags:
#  - skip_ansible_lint

- name: create geo.gov role if missing
  become: true
  become_user: postgres
#  when: check_ckan_db_user.stdout.find("(0 rows)") != -1
  # shell: sudo -u postgres psql -c "CREATE USER {{ catalog_db_user }} WITH PASSWORD '{{ catalog_db_pass }}' SUPERUSER;"
  postgresql_user:
    name: "{{ catalog_db_user }}"
    password: "{{ catalog_db_pass }}"
    role_attr_flags: SUPERUSER

- name: create ckan database if missing
  become: true
  become_user: postgres
  # shell: sudo -u postgres psql -c "SELECT 1 FROM pg_database WHERE datname = '{{ catalog_db_name }}';"
  postgresql_db:
    name: "{{ catalog_db_name }}"
    owner: "{{ catalog_db_user }}"
#  register: check_ckan_database

#- name: create ckan database
#  when: check_ckan_database.stdout.find("(0 rows)") != -1
#  shell: sudo -u postgres psql -c "CREATE DATABASE {{ catalog_db_name }} OWNER {{ catalog_db_user }};"

- name: install postgis script
  command: "sudo -u postgres psql -d {{ catalog_db_name }} -f /usr/share/postgresql/9.3/contrib/postgis-2.1/postgis.sql"
  tags: skip_ansible_lint

- name: install postgis script
  command: "sudo -u postgres psql -d {{ catalog_db_name }} -f /usr/share/postgresql/9.3/contrib/postgis-2.1/spatial_ref_sys.sql"
  tags: skip_ansible_lint

- name: install postgis script
  command: "sudo -u postgres psql -d {{ catalog_db_name }} -f /usr/share/postgresql/9.3/contrib/postgis-2.1/rtpostgis.sql"
  tags: skip_ansible_lint

- name: install postgis script
  command: "sudo -u postgres psql -d {{ catalog_db_name }} -f /usr/share/postgresql/9.3/contrib/postgis-2.1/topology.sql"
  tags: skip_ansible_lint

- name: install postgis script
  become: true
  become_user: postgres
  # shell: sudo -u postgres psql -d {{ catalog_db_name }} -c "GRANT SELECT, UPDATE, INSERT, DELETE ON spatial_ref_sys TO {{ catalog_db_user }};"
  postgresql_privs:
    database: "{{ catalog_db_name }}"
    privs: SELECT,UPDATE,INSERT,DELETE
    roles: "{{ catalog_db_user }}"
    objs: spatial_ref_sys

- name: copy locations sql script
  action: copy src={{item}} dest=/{{item}} mode=0644
  with_items:
    - tmp/locations.sql.gz

- name: create locations table
  shell: gunzip -c /tmp/locations.sql.gz | sudo -u postgres psql -d {{ catalog_db_name }}
  tags: skip_ansible_lint
