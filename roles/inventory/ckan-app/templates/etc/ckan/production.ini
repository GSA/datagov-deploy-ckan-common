#
# CKAN - Pylons configuration
#
# These are some of the configuration options available for your CKAN
# instance. Check the documentation in 'doc/configuration.rst' or at the
# following URL for a description of what they do and the full list of
# available options:
#
# http://docs.ckan.org/en/latest/configuration.html
#
# The %(here)s variable will be replaced with the parent directory of this file
#

[DEFAULT]

# WARNING: *THIS SETTING MUST BE SET TO FALSE ON A PRODUCTION ENVIRONMENT*
debug = false

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:ckan
full_stack = true
cache_dir = /tmp/%(ckan.site_id)s/
beaker.session.key = ckan

ckanext.datajson.inventory_links_enabled = True
ckanext.datajson.url_enabled = False

# This is the secret token that the beaker library uses to hash the cookie sent
# to the client. `paster make-config` generates a unique value for this each
# time it generates a config file.
beaker.session.secret = {{ ckan_instance_secret }}

beaker.session.type=ext:database
beaker.session.cookie_expires=true
beaker.session.url=%(sqlalchemy.url)s
# 3000 seconds = 50 mins
beaker.session.timeout=3000
beaker.session.lock_dir=/var/tmp/ckan/lock

# `paster make-config` generates a unique value for this each time it generates
# a config file.
app_instance_uuid = {{ ckan_instance_uuid }}

# repoze.who config
who.config_file = %(here)s/who.ini
who.log_level = warning
who.log_file = %(cache_dir)s/who_log.ini
# 30 minutes
who.timeout = 900
# who.httponly = True # DEFAULT True already
who.secure = {{ who_secure }}

## Database Settings
db_user = {{ inventory_db_user }}
db_pass = {{ inventory_db_pass }}
db_server = localhost
db_database = {{ inventory_db_name }}
sqlalchemy.url = postgresql://%(db_user)s:%(db_pass)s@%(db_server)s/%(db_database)s

datastore_user = {{ inventory_datastore_user }}
datastore_pass = {{ inventory_datastore_pass }}
datastore_ro_user = {{ inventory_datastore_ro_user }}
datastore_ro_pass = {{ inventory_datastore_ro_pass }}
datastore_server = localhost
datastore_database = {{ inventory_datastore_db_name }}
ckan.datastore.write_url = postgresql://%(datastore_user)s:%(datastore_pass)s@%(datastore_server)s/%(datastore_database)s
ckan.datastore.read_url = postgresql://%(datastore_ro_user)s:%(datastore_ro_pass)s@%(datastore_server)s/%(datastore_database)s

## Site Settings
# external url no trailing slash
ckan.site_url = {{ ckan_site_domain }}

## Authorization Settings

ckan.auth.anon_create_dataset = false
ckan.auth.create_unowned_dataset = false
ckan.auth.create_dataset_if_not_in_organization = false
ckan.auth.user_create_groups = false
ckan.auth.user_create_organizations = false
ckan.auth.user_delete_groups = false
ckan.auth.user_delete_organizations = false
ckan.auth.create_user_via_api = false
ckan.auth.create_user_via_web = true
ckan.auth.roles_that_cascade_to_sub_groups = admin

## Search Settings

ckan.site_id = central.ckan
solr_server = 127.0.0.1
solr_url = http://%(solr_server)s:8080/solr/{{app_type}}

#ckan.simple_search = 1


## Plugins Settings

# Note: Add ``datastore`` to enable the CKAN DataStore
#       Add ``pdf_preview`` to enable the resource preview for PDFs
#		Add ``resource_proxy`` to enable resorce proxying and get around the
#		same origin policy
ckan.plugins = usmetadata datajson datastore datapusher stats text_view recline_view googleanalyticsbasic

ckan.views.default_views = recline_view text_view image_view webpage_view recline_grid_view

## Front-End Settings
ckan.site_title = CKAN
ckan.site_logo = /base/images/ckan-logo.png
ckan.site_description =
ckan.favicon = /images/icons/ckan.ico
ckan.gravatar_default = identicon
ckan.preview.direct = png jpg gif
ckan.preview.loadable = html htm rdf+xml owl+xml xml n3 n-triples turtle plain atom csv tsv rss txt json

# package_hide_extras = for_search_index_only
#package_edit_return_url = http://another.frontend/dataset/<NAME>
#package_new_return_url = http://another.frontend/dataset/<NAME>
#ckan.recaptcha.publickey =
#ckan.recaptcha.privatekey =
#licenses_group_url = http://licenses.opendefinition.org/licenses/groups/ckan.json
# ckan.template_footer_end =


## Internationalisation Settings
ckan.locale_default = en
ckan.locale_order = en pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
ckan.locales_offered =
ckan.locales_filtered_out = en_GB

## SAML2 Settings
saml2.site_url = {{ saml2_site_url }}
saml2.config_path = %(here)s/saml2

saml2.user_mapping =
    email~maxemail
    fullname~field_display_name
    id~maxid
    name~maxemail

saml2.organization_mapping =
    name~field_unique_id
    title~field_organization
    extras:organization_type~field_organization_type

saml2.max_redirect_slo =
saml2.max_security_level = https://max.gov/icam/2015/10/securityLevels/securePlus2

## Feeds Settings

ckan.feeds.authority_name =
ckan.feeds.date =
ckan.feeds.author_name =
ckan.feeds.author_link =

## Storage Settings

# Local file storage:
#ofs.impl = pairtree
#ofs.storage_dir = /var/lib/ckan/default

# Google cloud storage:
#ofs.impl = google
#ofs.gs_access_key_id =
#ofs.gs_secret_access_key =

# S3 cloud storage:
#ofs.impl = s3
#ofs.aws_access_key_id = ....
#ofs.aws_secret_access_key = ....

# 'Bucket' to use for file storage
#ckan.storage.bucket = default

# Prefix for uploaded files (only used for pairtree)
#ckan.storage.key_prefix = file/

# The maximum content size, in bytes, for uploads
ckan.storage.max_content_length = 650000000

ckan.storage_path = /var/lib/ckan/files
ckanext.s3filestore.aws_use_ami_role = true
ckanext.s3filestore.aws_bucket_name = inventorybucket
ckanext.s3filestore.aws_storage_path = inventory
ckanext.s3filestore.aws_access_key_id = _placeholder
ckanext.s3filestore.aws_secret_access_key = _placeholder
# ckanext.s3filestore.filesystem_download_fallback = true

#ckan.max_resource_size = 650
#ckan.max_image_size = 2
ckan.resource_formats = /usr/lib/ckan/src/ckanext-usmetadata/ckanext/usmetadata/resource_formats.json

## Datapusher settings

# Make sure you have set up the DataStore

#ckan.datapusher.formats =
ckan.datapusher.url = http://127.0.0.1:8800/

## Activity Streams Settings

#ckan.activity_streams_enabled = true
#ckan.activity_list_limit = 31
#ckan.activity_streams_email_notifications = true
# ckan.email_notifications_since = 2 days


## Email settings

email_to = you@yourdomain.com
error_email_from = paste@localhost
smtp.server = localhost
smtp.starttls = False
#smtp.user = your_username@gmail.com
#smtp.password = your_password
#smtp.mail_from =
error_message = Server Error - Refresh the Page: An internal server error occurred. Try refreshing the page by pressing F5 or Ctrl+F5.

## googleanalyticsbasic
googleanalytics.ids = UA-42145528-2 UA-17367410-17

## Logging configuration
[loggers]
keys = root, ckan, ckanext, datajson

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console

[logger_ckan]
level = INFO
handlers = console
qualname = ckan
propagate = 0

[logger_ckanext]
level = DEBUG
handlers = console
qualname = ckanext
propagate = 0

[logger_datajson]
level = DEBUG
handlers = console
qualname = datajson
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
